/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stonehearth;

/**
 *
 * @author jbs118
 */
public class GameGUI extends javax.swing.JFrame {
//    String selectedCard;
//    Card rabidDog = new Card("Rabid Dog", "/stonehearth/images/rabidDog", 2, 2, 2);
    
    
    Game game = new Game();
    
    Player kienan = game.getMyPlayer();
    Player jordan = game.getCpuPlayer();
    
    
    Deck d = kienan.getDeck();
    Deck cd = jordan.getDeck();
    
    Card myHandCard1;
    Card myHandCard2;
    Card myHandCard3;
    Card myHandCard4;
    Card myHandCard5;
    Card myHandCard6;
    
    Card myBoardCard1;
    Card myBoardCard2;
    Card myBoardCard3;
    Card myBoardCard4;
    
    Card cpuBoardCard1;
    Card cpuBoardCard2;
    Card cpuBoardCard3;
    Card cpuBoardCard4;
    
    
    Card selectedCard;
    Card selectedAttackCard;
    Card cpuCardToPlay;
    
    boolean card1HasAttacked = false;
    boolean card2HasAttacked = false;
    boolean card3HasAttacked = false;
    boolean card4HasAttacked = false;
    
    boolean test = false;

    Card nullCard = new Card("",0,0,0,"");
    
    String fromHandButton;
    String fromAttackButton;
    
    int turnCount = 1;
    
    
    
    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();
        
        d.shuffle();
        cd.shuffle();
        
        myHandCard1 = d.draw();
        myHandCard2 = d.draw();
        myHandCard3 = d.draw();
        
        kienan.setMana(1);
        
        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + myHandCard1.getName() + ".png")));
        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + myHandCard2.getName() + ".png")));
        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + myHandCard3.getName() + ".png")));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        myHand1 = new javax.swing.JButton();
        myHand2 = new javax.swing.JButton();
        myHand3 = new javax.swing.JButton();
        myHand4 = new javax.swing.JButton();
        myHand5 = new javax.swing.JButton();
        myHand6 = new javax.swing.JButton();
        myBoard1 = new javax.swing.JButton();
        myBoard2 = new javax.swing.JButton();
        myBoard3 = new javax.swing.JButton();
        myBoard4 = new javax.swing.JButton();
        oppHand1 = new javax.swing.JButton();
        oppHand2 = new javax.swing.JButton();
        oppHand3 = new javax.swing.JButton();
        oppHand4 = new javax.swing.JButton();
        oppHand5 = new javax.swing.JButton();
        oppHand6 = new javax.swing.JButton();
        oppBoard1 = new javax.swing.JButton();
        oppBoard2 = new javax.swing.JButton();
        oppBoard3 = new javax.swing.JButton();
        oppBoard4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        enemyHPCounter = new javax.swing.JLabel();
        enemyManaCounter = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        recap = new javax.swing.JLabel();

        jButton10.setText("Board1");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton12.setText("Board1");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton15.setText("Board1");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton17.setText("Board1");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand1ActionPerformed(evt);
            }
        });

        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand2ActionPerformed(evt);
            }
        });

        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand3ActionPerformed(evt);
            }
        });

        myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand4ActionPerformed(evt);
            }
        });

        myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand5ActionPerformed(evt);
            }
        });

        myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        myHand6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHand6ActionPerformed(evt);
            }
        });

        myBoard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBoard1ActionPerformed(evt);
            }
        });

        myBoard2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBoard2ActionPerformed(evt);
            }
        });

        myBoard3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBoard3ActionPerformed(evt);
            }
        });

        myBoard4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBoard4ActionPerformed(evt);
            }
        });

        oppHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N
        oppHand1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppHand1ActionPerformed(evt);
            }
        });

        oppHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N

        oppHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N

        oppHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N

        oppHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N

        oppHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/cardBackMain.png"))); // NOI18N

        oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        oppBoard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppBoard1ActionPerformed(evt);
            }
        });

        oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        oppBoard2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppBoard2ActionPerformed(evt);
            }
        });

        oppBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        oppBoard3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppBoard3ActionPerformed(evt);
            }
        });

        oppBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png"))); // NOI18N
        oppBoard4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppBoard4ActionPerformed(evt);
            }
        });

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Enemy Hero");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        enemyHPCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enemyHPCounter.setText("30");

        enemyManaCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enemyManaCounter.setText("1");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("HP");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mana");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("30");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("1");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("HP");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Mana");

        jButton3.setText("End Turn");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        recap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recap.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(oppHand1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(enemyHPCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(enemyManaCounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel3)
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(oppHand2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppHand3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppHand4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppHand5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppHand6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(oppBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppBoard2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppBoard3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oppBoard4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(recap, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(62, Short.MAX_VALUE)
                                .addComponent(myHand1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(myBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myBoard2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myBoard3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myBoard4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(myHand2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(myHand3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myHand4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myHand5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(myHand6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addGap(56, 56, 56))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oppHand2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oppHand3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oppHand1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oppHand5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oppHand6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oppHand4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(oppBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oppBoard2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oppBoard3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oppBoard4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(enemyHPCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(enemyManaCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(recap, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(myBoard2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(myBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(myBoard3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(myBoard4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(60, 60, 60)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myHand2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myHand1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myHand5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myHand6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myHand4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myHand3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myHand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand1ActionPerformed
        //selectedCard = natPagle.getName();
        //(selectedCard);
        
        //myHand1.setIcon(null);
        
//        myHand1.setToolTipText(myHandCard1.getName() + myHandCard1.getInstance());
        selectedCard = myHandCard1;
        fromHandButton = "myHand1";
        
        
 //       myHand1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c2.getName() + ".png")));
        
    }//GEN-LAST:event_myHand1ActionPerformed

    private void oppHand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppHand1ActionPerformed

    }//GEN-LAST:event_oppHand1ActionPerformed

    private void oppBoard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppBoard1ActionPerformed
        //int j;
        
        
        switch(fromAttackButton){
            case "myBoard1":
                if(card1HasAttacked == true);
                //j = 1;
                break;
            case "myBoard2":
                if(card2HasAttacked == true);
                //j = 1;
                break;
            case "myBoard3":
                if(card3HasAttacked == true);
               // j = 1;
                break;
            case "myBoard4":
                if(card4HasAttacked == true);
               // j = 1;
                selectedCard = myBoardCard4;
                break;
            default:
               // j = 1;
                break;
        }
        
       
        if(selectedAttackCard != null){
            String test = game.cardAttackHandler(selectedAttackCard, cpuBoardCard1);
            
            switch(test) {
                case "defenderDied":
                    switch(fromAttackButton){
                        case "myBoard1":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                    }

                    
                case "defenderLived": 
                    cpuBoardCard1.setHP(cpuBoardCard1.getHP()-selectedAttackCard.getAtk());
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard1.getAtk());
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard1.getAtk());
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard1.getAtk());
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard1.getAtk());
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                    break;
                
                case "attackerLost":
                    switch(fromAttackButton){
                        case "myBoard1":
                            selectedAttackCard = nullCard;
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            selectedAttackCard = nullCard;
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            selectedAttackCard = nullCard;
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            selectedAttackCard = nullCard;
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                    
                break;
                
                case "tie":
                    cpuBoardCard1 = nullCard;
                    oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                    selectedAttackCard = nullCard; 
                    
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                break;
                        
                default:
                    break;
            }
        }
    }//GEN-LAST:event_oppBoard1ActionPerformed

    private void myBoard2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBoard2ActionPerformed
        if(selectedCard != null){
            
            
            if(kienan.getMana() >= selectedCard.getMana()){

                kienan.setMana(kienan.getMana() - selectedCard.getMana());
                jLabel5.setText(String.valueOf(kienan.getMana()));
                
                myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + selectedCard.getName() + ".png")));
                switch (fromHandButton) {
                    case "myHand1":
                        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard1 = null;
                        selectedCard = null;
                        break;
                    case "myHand2":
                        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard2 = null;
                        selectedCard = null;
                        break;
                    case "myHand3":
                        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard3 = null;
                        selectedCard = null;
                        break;
                    case "myHand4":
                        myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard4 = null;
                        selectedCard = null;
                        break;
                    case "myHand5":
                        myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard5 = null;
                        selectedCard = null;
                        break;
                    case "myHand6":
                        myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = selectedCard;
                        myHandCard6 = null;
                        selectedCard = null;
                        break;
                    default:
                        break;
                }
            }
             
            }
            else{
            selectedAttackCard = myBoardCard2;
            fromAttackButton = "myBoard2";
        }

    }//GEN-LAST:event_myBoard2ActionPerformed

    private void myBoard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBoard1ActionPerformed
        if(selectedCard != null){
            
            
            if(kienan.getMana() >= selectedCard.getMana()){

                kienan.setMana(kienan.getMana() - selectedCard.getMana());
                jLabel5.setText(String.valueOf(kienan.getMana()));
                
                myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + selectedCard.getName() + ".png")));
                switch (fromHandButton) {
                    case "myHand1":
                        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard1 = null;
                        selectedCard = null;
                        break;
                    case "myHand2":
                        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard2 = null;
                        selectedCard = null;
                        break;
                    case "myHand3":
                        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard3 = null;
                        selectedCard = null;
                        break;
                    case "myHand4":
                        myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard4 = null;
                        selectedCard = null;
                        break;
                    case "myHand5":
                        myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard5 = null;
                        selectedCard = null;
                        break;
                    case "myHand6":
                        myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = selectedCard;
                        myHandCard6 = null;
                        selectedCard = null;
                        break;
                    default:
                        break;
                }
            }
             
            }
            else{
            selectedAttackCard = myBoardCard1;
            fromAttackButton = "myBoard1";
        }
    }//GEN-LAST:event_myBoard1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void myBoard3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBoard3ActionPerformed
       if(selectedCard != null){
            
            
            if(kienan.getMana() >= selectedCard.getMana()){

                kienan.setMana(kienan.getMana() - selectedCard.getMana());
                jLabel5.setText(String.valueOf(kienan.getMana()));
                
                myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + selectedCard.getName() + ".png")));
                switch (fromHandButton) {
                    case "myHand1":
                        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard1 = null;
                        selectedCard = null;
                        break;
                    case "myHand2":
                        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard2 = null;
                        selectedCard = null;
                        break;
                    case "myHand3":
                        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard3 = null;
                        selectedCard = null;
                        break;
                    case "myHand4":
                        myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard4 = null;
                        selectedCard = null;
                        break;
                    case "myHand5":
                        myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard5 = null;
                        selectedCard = null;
                        break;
                    case "myHand6":
                        myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = selectedCard;
                        myHandCard6 = null;
                        selectedCard = null;
                        break;
                    default:
                        break;
                }
            }
             
            }
            else{
            selectedAttackCard = myBoardCard3;
            fromAttackButton = "myBoard3";
        }
    }//GEN-LAST:event_myBoard3ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void oppBoard3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppBoard3ActionPerformed
        //int j;
        switch(fromAttackButton){
            case "myBoard1":
                if(card1HasAttacked == true);
                //j = 1;
                break;
            case "myBoard2":
                if(card2HasAttacked == true);
                //j = 1;
                break;
            case "myBoard3":
                if(card3HasAttacked == true);
                //j = 1;
                break;
            case "myBoard4":
                if(card4HasAttacked == true);
                //j = 1;
                selectedCard = myBoardCard4;
                break;
            default:
                //j = 1;
        }
       
        if(selectedAttackCard != null){
            String test = game.cardAttackHandler(selectedAttackCard, cpuBoardCard3);
            
            switch(test) {
                case "defenderDied":
                    switch(fromAttackButton){
                        case "myBoard1":
                            cpuBoardCard2 = nullCard;
                            oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            cpuBoardCard2 = nullCard;
                            oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            cpuBoardCard2 = nullCard;
                            oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            cpuBoardCard2 = nullCard;
                            oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                    }
                    
                case "defenderLived": 
                    cpuBoardCard3.setHP(cpuBoardCard3.getHP()-selectedAttackCard.getAtk());
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard3.getAtk());
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard3.getAtk());
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard3.getAtk());
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard3.getAtk());
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                    break;
                
                case "attackerLost":
                    switch(fromAttackButton){
                        case "myBoard1":
                            selectedAttackCard = nullCard;
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            selectedAttackCard = nullCard;
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            selectedAttackCard = nullCard;
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            selectedAttackCard = nullCard;
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                    
                break;
                
                case "tie":
                    cpuBoardCard3 = nullCard;
                    oppBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                    selectedAttackCard = nullCard; 
                    
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card1HasAttacked = true;
                            break;
                        case "myBoard2":
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card2HasAttacked = true;
                            break;
                        case "myBoard3":
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card3HasAttacked = true;
                            break;
                        case "myBoard4":
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            card4HasAttacked = true;
                            break;
                        default:
                            break;
                    }
                break;
                        
                default:
                    break;
            }
        }
    }//GEN-LAST:event_oppBoard3ActionPerformed

    private void oppBoard2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppBoard2ActionPerformed

       
        if(selectedAttackCard != null){
            String test = game.cardAttackHandler(selectedAttackCard, cpuBoardCard2);
            
            switch(test) {
                case "defenderDied":
                    switch(fromAttackButton){
                        case "myBoard1":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                    }
                    
                case "defenderLived": 
                    cpuBoardCard2.setHP(cpuBoardCard2.getHP()-selectedAttackCard.getAtk());
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard2.getAtk());
                            break;
                        case "myBoard2":
                            myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard2.getAtk());
                            break;
                        case "myBoard3":
                            myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard2.getAtk());
                            break;
                        case "myBoard4":
                            myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard2.getAtk());
                            break;
                        default:
                            break;
                    }
                    break;
                
                case "attackerLost":
                    switch(fromAttackButton){
                        case "myBoard1":
                            selectedAttackCard = nullCard;
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            selectedAttackCard = nullCard;
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            selectedAttackCard = nullCard;
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            selectedAttackCard = nullCard;
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        default:
                            break;
                    }
                    
                break;
                
                case "tie":
                    cpuBoardCard2 = nullCard;
                    oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                    selectedAttackCard = nullCard; 
                    
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        default:
                            break;
                    }
                break;
                        
                default:
                    break;
            }
        }
    }//GEN-LAST:event_oppBoard2ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void myBoard4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBoard4ActionPerformed
       if(selectedCard != null){
            
            
            if(kienan.getMana() >= selectedCard.getMana()){

                kienan.setMana(kienan.getMana() - selectedCard.getMana());
                jLabel5.setText(String.valueOf(kienan.getMana()));
                
                myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + selectedCard.getName() + ".png")));
                switch (fromHandButton) {
                    case "myHand1":
                        myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard1 = null;
                        selectedCard = null;
                        break;
                    case "myHand2":
                        myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard2 = null;
                        selectedCard = null;
                        break;
                    case "myHand3":
                        myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard3 = null;
                        selectedCard = null;
                        break;
                    case "myHand4":
                        myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard4 = null;
                        selectedCard = null;
                        break;
                    case "myHand5":
                        myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard5 = null;
                        selectedCard = null;
                        break;
                    case "myHand6":
                        myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = selectedCard;
                        myHandCard6 = null;
                        selectedCard = null;
                        break;
                    default:
                        break;
                }
            }
             
            }
            else{
            selectedAttackCard = myBoardCard4;
            fromAttackButton = "myBoard4";
        }
    }//GEN-LAST:event_myBoard4ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void oppBoard4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppBoard4ActionPerformed

       
        if(selectedAttackCard != null){
            String test = game.cardAttackHandler(selectedAttackCard, cpuBoardCard4);
            
            switch(test) {
                case "defenderDied":
                    switch(fromAttackButton){
                        case "myBoard1":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            cpuBoardCard1 = nullCard;
                            oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                    }
                    
                case "defenderLived": 
                    cpuBoardCard4.setHP(cpuBoardCard4.getHP()-selectedAttackCard.getAtk());
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard1.getAtk());
                            break;
                        case "myBoard2":
                            myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard1.getAtk());
                            break;
                        case "myBoard3":
                            myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard1.getAtk());
                            break;
                        case "myBoard4":
                            myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard1.getAtk());
                            break;
                        default:
                            break;
                    }
                    break;
                
                case "attackerLost":
                    switch(fromAttackButton){
                        case "myBoard1":
                            selectedAttackCard = nullCard;
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            selectedAttackCard = nullCard;
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            selectedAttackCard = nullCard;
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            selectedAttackCard = nullCard;
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        default:
                            break;
                    }
                    
                break;
                
                case "tie":
                    cpuBoardCard4 = nullCard;
                    oppBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                    selectedAttackCard = nullCard; 
                    
                    switch(fromAttackButton){
                        case "myBoard1":
                            myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard2":
                            myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard3":
                            myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        case "myBoard4":
                            myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                            break;
                        default:
                            break;
                    }
                break;
                        
                default:
                    break;
            }
        }
    }//GEN-LAST:event_oppBoard4ActionPerformed

    private void myHand5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand5ActionPerformed
//        myHand5.setToolTipText(myHandCard5.getName() + myHandCard5.getInstance());
        selectedCard = myHandCard5;
        fromHandButton = "myHand5";
        
    }//GEN-LAST:event_myHand5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch(fromAttackButton){
                case "myBoard1":
                    if(selectedAttackCard != null && card1HasAttacked == false){
                        jordan.setHealth(jordan.getHealth() - selectedAttackCard.getAtk());
                        selectedAttackCard = null;
                        if(jordan.getHealth() <= 0){
                            enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                            jButton3.setVisible(false); //Enemy has less than 1 hp therefore game over. Display victory screen.
                            VictoryGUI vgui = new VictoryGUI();
                            vgui.setVisible(true);
                            this.dispose();
                        }
                        card1HasAttacked = true;
                        enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                    }
                    break;
                case "myBoard2":
                    if(selectedAttackCard != null && card2HasAttacked == false){
                        jordan.setHealth(jordan.getHealth() - selectedAttackCard.getAtk());
                        selectedAttackCard = null;
                        if(jordan.getHealth() <= 0){
                            enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                            jButton3.setVisible(false); //Enemy has less than 1 hp therefore game over. Display victory screen.
                            VictoryGUI vgui = new VictoryGUI();
                            vgui.setVisible(true);
                            this.dispose();
                        }
                        card2HasAttacked = true;
                        enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                    }
                    break;
                case "myBoard3":
                    if(selectedAttackCard != null && card3HasAttacked == false){
                        jordan.setHealth(jordan.getHealth() - selectedAttackCard.getAtk());
                        selectedAttackCard = null;
                        if(jordan.getHealth() <= 0){
                            enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                            jButton3.setVisible(false); //Enemy has less than 1 hp therefore game over. Display victory screen.
                            VictoryGUI vgui = new VictoryGUI();
                            vgui.setVisible(true);
                            this.dispose();
                        }
                        card3HasAttacked = true;
                        enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                    }
                    break;
                case "myBoard4":
                    if(selectedAttackCard != null && card4HasAttacked == false){
                        jordan.setHealth(jordan.getHealth() - selectedAttackCard.getAtk());
                        selectedAttackCard = null;
                        if(jordan.getHealth() <= 0){
                            enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                            jButton3.setVisible(false); //Enemy has less than 1 hp therefore game over. Display victory screen.
                            VictoryGUI vgui = new VictoryGUI();
                            vgui.setVisible(true);
                            this.dispose();
                        }
                        card4HasAttacked = true;
                        enemyHPCounter.setText(String.valueOf(jordan.getHealth()));
                    }
                    break;
            }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //CPU TURN HANDLER HERE
        turnCount++;
        
        card1HasAttacked = false;
        card2HasAttacked = false;
        card3HasAttacked = false;
        card4HasAttacked = false;
        
        if( turnCount >= 10){
            kienan.setMana(10);
        } else {
            kienan.setMana(turnCount);
        }
        
        
        
        jordan.setMana(kienan.getMana());
        
        jLabel5.setText(String.valueOf(kienan.getMana()));
        
        enemyManaCounter.setText(String.valueOf(jordan.getMana()));
        
        int sentinel = 0;
        
        cpuCardToPlay = game.cpuTurnHandler(kienan.getMana(), cd); //draws card and returns a card to play if he has enough mana
                                                                   //if not enough mana, returns nullcard.
                                     
                                                  
        
        if(cpuCardToPlay.getName().equals("")){
            
        } 
        else{
            if(cpuCardToPlay.getMana() <= kienan.getMana()){
                if( oppBoard1.getIcon().toString().contains("blankCard.png") && sentinel != 1){
                    oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + cpuCardToPlay.getName() + ".png")));         
                    cpuBoardCard1 = cpuCardToPlay;
                    sentinel = 1;
                }
                if( oppBoard2.getIcon().toString().contains("/stonehearth/images/blankCard.png") && sentinel != 1){
                    oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + cpuCardToPlay.getName() + ".png")));  
                    cpuBoardCard2 = cpuCardToPlay;
                    sentinel = 1;
                }
                if( oppBoard3.getIcon().toString().contains("/stonehearth/images/blankCard.png") && sentinel != 1){
                    oppBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + cpuCardToPlay.getName() + ".png")));
                    cpuBoardCard3 = cpuCardToPlay;
                    sentinel = 1;
                }
                if( oppBoard4.getIcon().toString().contains("/stonehearth/images/blankCard.png") && sentinel != 1){
                    oppBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + cpuCardToPlay.getName() + ".png")));
                    cpuBoardCard4 = cpuCardToPlay;
                    sentinel = 1;
                }
            }
        }if( oppBoard1.getIcon().toString().contains("blankCard.png")){} //if the icon is blank, do nothing.
        else{                                                            //otherwise attack.

            if( myBoard1.getIcon() != null && myBoardCard1.getAtk() > 3 ) {
               
                String attackResult = game.cardAttackHandler( cpuBoardCard1, myBoardCard1 );
               
               switch(attackResult){
                    case"tie":
                        recap.setText("<html>" + cpuBoardCard1.getName() + " tied with " + myBoardCard1.getName() + "</html>");
                        cpuBoardCard1 = nullCard;
                        myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        selectedAttackCard = nullCard; 
                    
                       break;
                    case"attackerLost":
                        recap.setText("<html>" + cpuBoardCard1.getName() + " died to " + myBoardCard1.getName() + "\n" + " Dealing " + cpuBoardCard1.getAtk() + " Damage." + "</html>");
                        myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard1.getAtk());
                        cpuBoardCard1 = nullCard;
                        oppBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));

                        break;
                        
                    case"defenderLived":
                        myBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard1.getAtk());
                        cpuBoardCard1.setHP(cpuBoardCard1.getHP() - myBoardCard1.getAtk());
                        myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = nullCard;

                        break;
                        
                    case"defenderDied":
                        cpuBoardCard1.setHP(myBoardCard1.getHP() - cpuBoardCard1.getAtk());
                        myBoard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard1 = nullCard;
                     
                        break;
                        
   
                }
               
            } else {
                
                    game.heroAttackHandler(kienan, cpuBoardCard1.getAtk());
                    jLabel4.setText(String.valueOf(kienan.getHealth())); 
                    
            }
            
            if(kienan.getHealth() <= 0){
                jButton3.setVisible(false); //i has less than 1 hp therefore game over. Display lose screen.
                LossGUI lgui = new LossGUI();
                lgui.setVisible(true);
                this.dispose();
            }
        }
        if( oppBoard2.getIcon().toString().contains("blankCard.png")){} //if the icon is blank, do nothing.
        else{                                                            //otherwise attack.

            if( myBoard2.getIcon() != null && myBoardCard2.getAtk() > 3 ) {
               
                String attackResult = game.cardAttackHandler( cpuBoardCard2, myBoardCard2 );
               
               switch(attackResult){
                    case"tie":
                        recap.setText("<html>" + cpuBoardCard2.getName() + " tied with " + myBoardCard2.getName() + "</html>");
                        cpuBoardCard2 = nullCard;
                        myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        selectedAttackCard = nullCard; 
                    
                       break;
                    case"attackerLost":
                        recap.setText("<html>" + cpuBoardCard2.getName() + " died to " + myBoardCard2.getName() + "\n" + " Dealing " + cpuBoardCard2.getAtk() + " Damage." + "</html>");
                        myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard2.getAtk());
                        cpuBoardCard2 = nullCard;
                        oppBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));

                        break;
                        
                    case"defenderLived":
                        
                        myBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard2.getAtk());
                        
                        cpuBoardCard2.setHP(cpuBoardCard2.getHP() - myBoardCard2.getAtk());
                        
                        myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = nullCard;

                        break;
                        
                    case"defenderDied":
                        
                        cpuBoardCard2.setHP(myBoardCard2.getHP() - cpuBoardCard2.getAtk());
                        
                        myBoard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard2 = nullCard;
                     
                        break;
                        
   
                }
            } else {

                    game.heroAttackHandler(kienan, cpuBoardCard2.getAtk());
                    jLabel4.setText(String.valueOf(kienan.getHealth()));

            }
            
            if(kienan.getHealth() <= 0){
                jButton3.setVisible(false); //i has less than 1 hp therefore game over. Display lose screen.
                LossGUI lgui = new LossGUI();
                lgui.setVisible(true);
                this.dispose();
            }
        }
        if( oppBoard3.getIcon().toString().contains("blankCard.png")){} //if the icon is blank, do nothing.
        else{                                                            //otherwise attack.

            if( myBoard3.getIcon() != null && myBoardCard3.getAtk() > 3 ) {
               
                String attackResult = game.cardAttackHandler( cpuBoardCard3, myBoardCard3 );
               
               switch(attackResult){
                    case"tie":
                        recap.setText("<html>" + cpuBoardCard3.getName() + " tied with " + myBoardCard3.getName() + "</html>");
                        cpuBoardCard3 = nullCard;
                        myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        oppBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        selectedAttackCard = nullCard; 
                    
                       break;
                    case"attackerLost":
                        recap.setText("<html>" + cpuBoardCard3.getName() + " died to " + myBoardCard3.getName() + "\n" + " Dealing " + cpuBoardCard3.getAtk() + " Damage." + "</html>");
                        myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard3.getAtk());
                        cpuBoardCard3 = nullCard;
                        oppBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));

                        break;
                        
                    case"defenderLived":
                        
                        myBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard3.getAtk());
                        
                        cpuBoardCard3.setHP(cpuBoardCard3.getHP() - myBoardCard3.getAtk());
                        
                        myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = nullCard;

                        break;
                        
                    case"defenderDied":
                        
                        cpuBoardCard3.setHP(myBoardCard3.getHP() - cpuBoardCard3.getAtk());
                        
                        myBoard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard3 = nullCard;
                     
                        break;
                        
   
                }
            } else {

                    game.heroAttackHandler(kienan, cpuBoardCard3.getAtk());
                    jLabel4.setText(String.valueOf(kienan.getHealth()));

            }
            
            if(kienan.getHealth() <= 0){
                jButton3.setVisible(false); //i has less than 1 hp therefore game over. Display lose screen.
                LossGUI lgui = new LossGUI();
                lgui.setVisible(true);
                this.dispose();
            }
        }
        if( oppBoard4.getIcon().toString().contains("blankCard.png")){} //if the icon is blank, do nothing.
        else{                                                            //otherwise attack.

            if( myBoard4.getIcon() != null && myBoardCard4.getAtk() > 3 ) {
               
                String attackResult = game.cardAttackHandler( cpuBoardCard4, myBoardCard4 );
               
               switch(attackResult){
                    case"tie":
                        recap.setText("<html>" + cpuBoardCard4.getName() + " tied with " + myBoardCard4.getName() + "</html>");
                        cpuBoardCard4 = nullCard;
                        myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        oppBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        selectedAttackCard = nullCard; 
                    
                       break;
                    case"attackerLost":
                        recap.setText("<html>" + cpuBoardCard4.getName() + " died to " + myBoardCard4.getName() + "\n" + " Dealing " + cpuBoardCard4.getAtk() + " Damage." + "</html>");
                        myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard4.getAtk());
                        cpuBoardCard4 = nullCard;
                        oppBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));

                        break;
                        
                    case"defenderLived":
                        
                        myBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard4.getAtk());
                        
                        cpuBoardCard4.setHP(cpuBoardCard4.getHP() - myBoardCard4.getAtk());
                        
                        myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = nullCard;

                        break;
                        
                    case"defenderDied":
                        cpuBoardCard4.setHP(myBoardCard4.getHP() - cpuBoardCard4.getAtk());
                        
                        myBoard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/blankCard.png")));
                        myBoardCard4 = nullCard;
                     
                        break;
                        
   
                }
            } else {

                    game.heroAttackHandler(kienan, cpuBoardCard4.getAtk());
                    jLabel4.setText(String.valueOf(kienan.getHealth()));

            }
            
            if(kienan.getHealth() <= 0){
                jButton3.setVisible(false); //i has less than 1 hp therefore game over. Display lose screen.
                LossGUI lgui = new LossGUI();
                lgui.setVisible(true);
                this.dispose();
            }
        }
        
        Card c1;
        

        
        try {
           
        c1 = d.draw();
        
        } catch(Exception e){
            System.err.println("Out of Cards. Game Over.");
            jButton3.setVisible(false);
            return;
        }
        if( myHand1.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard1 = c1;
        } 
        else if (myHand2.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard2 = c1;
        }
        else if (myHand3.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard3 = c1;
        }
        else if (myHand4.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard4 = c1;
        }
        else if (myHand5.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard5 = c1;
        }
        else if (myHand6.getIcon().toString().contains("/stonehearth/images/blankCard.png")){
            myHand6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stonehearth/images/" + c1.getName() + ".png")));
            myHandCard6 = c1; 
        }
        else{
            c1 = null;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void myHand2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand2ActionPerformed
//        myHand2.setToolTipText(myHandCard2.getName() + myHandCard2.getInstance());
        selectedCard = myHandCard2;
        fromHandButton = "myHand2";
//myHand2.setIcon(null);
    }//GEN-LAST:event_myHand2ActionPerformed

    private void myHand3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand3ActionPerformed
//        myHand3.setToolTipText(myHandCard3.getName() + myHandCard3.getInstance());
        selectedCard = myHandCard3; 
        fromHandButton = "myHand3";
//myHand3.setIcon(null);
    }//GEN-LAST:event_myHand3ActionPerformed

    private void myHand4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand4ActionPerformed
//        myHand4.setToolTipText(myHandCard4.getName() + myHandCard4.getInstance());
        selectedCard = myHandCard4; 
        fromHandButton = "myHand4"; 
//myHand4.setIcon(null);
    }//GEN-LAST:event_myHand4ActionPerformed

    private void myHand6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHand6ActionPerformed
//        myHand6.setToolTipText(myHandCard6.getName() + myHandCard6.getInstance());
        selectedCard = myHandCard6;  
        fromHandButton = "myHand6";
//myHand6.setIcon(null);
    }//GEN-LAST:event_myHand6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enemyHPCounter;
    private javax.swing.JLabel enemyManaCounter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton myBoard1;
    private javax.swing.JButton myBoard2;
    private javax.swing.JButton myBoard3;
    private javax.swing.JButton myBoard4;
    private javax.swing.JButton myHand1;
    private javax.swing.JButton myHand2;
    private javax.swing.JButton myHand3;
    private javax.swing.JButton myHand4;
    private javax.swing.JButton myHand5;
    private javax.swing.JButton myHand6;
    private javax.swing.JButton oppBoard1;
    private javax.swing.JButton oppBoard2;
    private javax.swing.JButton oppBoard3;
    private javax.swing.JButton oppBoard4;
    private javax.swing.JButton oppHand1;
    private javax.swing.JButton oppHand2;
    private javax.swing.JButton oppHand3;
    private javax.swing.JButton oppHand4;
    private javax.swing.JButton oppHand5;
    private javax.swing.JButton oppHand6;
    private javax.swing.JLabel recap;
    // End of variables declaration//GEN-END:variables
}
